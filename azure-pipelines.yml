# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  name: selfhost

variables:
- group: demo

steps:
  - script: echo "GHCR_USERNAME=$GHCR_USERNAME"
    displayName: 'üîç ÌôòÍ≤ΩÎ≥ÄÏàò ÌôïÏù∏'
    env:
      GHCR_USERNAME: $(GHCR_USERNAME)

  - task: Gradle@3
    displayName: 'üõ†Ô∏è Build with Gradle'
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: build
      options: ''
      publishJUnitResults: false
      javaHomeOption: 'Path'
      jdkDirectory: '/usr/lib/jvm/java-17-openjdk'
      jdkArchitectureOption: 'x64'
    env:
      GHCR_USERNAME: $(GHCR_USERNAME)
      GHCR_TOKEN: $(GHCR_TOKEN)

  - script: echo "ls -al"
    displayName: 'search'

  - task: PublishBuildArtifacts@1
    displayName: 'üì¶ Publish JAR Artifact'
    inputs:
      pathToPublish: 'build/libs'
      artifactName: 'springboot-jar'
      publishLocation: 'Container'

  - script: |
      ./gradlew jib \
        -Djib.to.image=ghcr.io/$GHCR_USERNAME/demo:latest \
        -Djib.to.auth.username=$GHCR_USERNAME \
        -Djib.to.auth.password=$GHCR_TOKEN
    displayName: 'Jib: Push image to GitHub Container Registry'
    env:
      GHCR_USERNAME: $(GHCR_USERNAME)
      GHCR_TOKEN: $(GHCR_TOKEN)

